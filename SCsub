#!/usr/bin/env python
import os

Import("env")
Import("env_modules")

is_gcc = "gcc" in os.path.basename(env["CC"])
is_clang_or_gcc = (
    ("gcc" in os.path.basename(env["CC"])) or ("clang" in os.path.basename(env["CC"])) or ("osxcross" in env)
)

env_module = env_modules.Clone()

sources = (
    Glob("*.cpp")
    + Glob("RmlUi/Source/Core/*.cpp")
    + Glob("RmlUiGodot/*.cpp")
)
if env["target"] == "release_debug" or env["target"] == "debug":
    sources += Glob("RmlUi/Source/Debugger/*.cpp")

env_module.Prepend(CPPPATH=["#modules/gdextensions", "#modules/gdextensions/thirdparty", "RmlUi/Include", "RmlUi/Source"])

if (env["platform"] == "android" and not env["android_rtti"]) or (
    env["platform"] == "iphone" and not env["ios_exceptions"]
):
    env_module.Append(CPPDEFINES=["RMLUI_USE_CUSTOM_RTTI=0"])
if is_gcc:
    env_module.Append(CXXFLAGS=["-Wno-maybe-uninitialized"])
if is_clang_or_gcc:
    env_module.Append(CXXFLAGS=["-std=gnu++14"])
if env["builtin_freetype"]:
    env_module.Prepend(CPPPATH=["#thirdparty/freetype/include"])

# Compile as a static library
lib = env_module.Library("gd_rmlui", sources)
# Add the library as a dependency of the final executable
env.Prepend(LIBS=[lib])
